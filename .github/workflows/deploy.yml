name: Deploy Penguin Bank

on:
  push:
    branches: [main, staging]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '20'
  SUPABASE_VERSION: 'latest'

jobs:
  # Test and type check
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: ${{ env.SUPABASE_VERSION }}
      
      - name: Generate types
        run: |
          supabase gen types typescript \
            --project-id ${{ secrets.SUPABASE_PROJECT_ID }} \
            > src/types/database.ts
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      
      - name: Run linter
        run: npm run lint
      
      - name: Run type check
        run: npm run typecheck
      
      - name: Run tests
        run: npm test
      
      - name: Build project
        run: npm run build

  # Deploy database migrations
  migrate:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging'
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: ${{ env.SUPABASE_VERSION }}
      
      - name: Verify environment variables
        run: |
          echo "Checking required environment variables..."
          if [ -z "${{ secrets.SUPABASE_PROJECT_ID }}" ]; then
            echo "ERROR: SUPABASE_PROJECT_ID secret not set"
            exit 1
          fi
          if [ -z "${{ secrets.SUPABASE_ACCESS_TOKEN }}" ]; then
            echo "ERROR: SUPABASE_ACCESS_TOKEN secret not set"
            exit 1
          fi
          if [ -z "${{ secrets.SUPABASE_DB_PASSWORD }}" ]; then
            echo "ERROR: SUPABASE_DB_PASSWORD secret not set"
            exit 1
          fi
          echo "All required secrets are present"
      
      - name: Link Supabase project
        run: |
          echo "Linking to Supabase project: ${{ secrets.SUPABASE_PROJECT_ID }}"
          supabase link --project-ref ${{ secrets.SUPABASE_PROJECT_ID }} --debug
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      
      - name: Check migration status
        run: |
          echo "Checking current migration status..."
          supabase migration list --debug
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      
      - name: Push database migrations (Production)
        if: github.ref == 'refs/heads/main'
        run: |
          echo "Deploying migrations to production..."
          supabase db push --password "${{ secrets.SUPABASE_DB_PASSWORD }}" --debug
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      
      - name: Push database migrations (Staging - Dry Run)
        if: github.ref == 'refs/heads/staging'
        run: |
          echo "Running dry-run for staging..."
          supabase db push --dry-run --password "${{ secrets.SUPABASE_DB_PASSWORD }}" --debug
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      
      - name: Verify deployment success
        if: github.ref == 'refs/heads/main'
        run: |
          echo "Verifying deployment..."
          supabase migration list --debug
          echo "Migration deployment completed successfully"
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}

  # Deploy to Netlify
  deploy:
    needs: [test, migrate]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy to Netlify Preview
        if: github.event_name == 'pull_request'
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: './public'
          functions-dir: './netlify/edge-functions'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from PR #${{ github.event.pull_request.number }}"
          enable-pull-request-comment: true
          enable-commit-comment: false
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      
      - name: Deploy to Netlify Production
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: './public'
          functions-dir: './netlify/edge-functions'
          production-deploy: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Production deploy ${{ github.sha }}"
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      
      - name: Create deployment status
        if: github.ref == 'refs/heads/main'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: context.payload.deployment.id,
              state: 'success',
              environment_url: 'https://penguinbank.cloud',
              description: 'Deployed to production'
            });